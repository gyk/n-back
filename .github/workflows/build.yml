name: Build

on:
  push:
    branches: [master]
    paths-ignore:
      - '*.md'
  pull_request:
    branches: [master]
    paths-ignore:
      - '*.md'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: 'true'

      - name: Maven cache
        uses: actions/cache@v3
        id: maven-cache
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('deps.edn') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Prepare Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Clojure tools.deps
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.11.1.1208'

      - name: Fetch Maven deps
        if: steps.maven-cache.outputs.cache-hit != 'true'
        run: clojure -A:cljs -P

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: yarn cache
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Fetch yarn deps
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Build release
        run: clojure -M:shadow-cljs release app
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          exclude_assets: '.github,public/js/manifest.edn,public/js/cljs-runtime/**'
